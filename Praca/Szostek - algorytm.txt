Commit 5 - Dodanie "jednorodnego rozmycia" dzia³aj¹cego w czasie aby mo¿na by³o zobaczyæ efekt

#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/highgui/highgui.hpp"
#include <iostream>

using namespace std;
using namespace cv;

// Sta³e globalne

int DELAY_CAPTION = 1500;
int DELAY_BLUR = 100;
int MAX_KERNEL_LENGTH = 40;

Mat src; Mat dst;
char window_name[] = "Filter Demo 1";

int display_caption( char* caption );
int display_dst( int delay );


int main( int argc, char** argv )
{
	namedWindow( window_name, CV_WINDOW_AUTOSIZE );

   	src = imread("lena.bmp", CV_LOAD_IMAGE_COLOR);	// Wczytanie obrazu

	if( display_caption( "Oryginalny obraz" ) != 0 ) { return 0; }

   	dst = src.clone();
   	if( display_dst( DELAY_CAPTION ) != 0 ) { return 0; }
	
	/// Jednorodne rozmycie
   	if( display_caption( "Jednorodne rozmycie" ) != 0 ) { return 0; }

   	for ( int i = 1; i < MAX_KERNEL_LENGTH; i = i + 2 )
    	{
        	blur( src, dst, Size( i, i ), Point(-1,-1) );
        	if( display_dst( DELAY_BLUR ) != 0 )
        	{
            		return 0;
        	}
    	}

	// Czeka a¿ u¿ytkownik wcisnie klawisz
     	display_caption( "End: Press a key!" );

     	waitKey(0);
     	return 0;
}

int display_caption( char* caption )
 {
   dst = Mat::zeros( src.size(), src.type() );
   putText( dst, caption,
            Point( src.cols/4, src.rows/2),
            CV_FONT_HERSHEY_COMPLEX, 1, Scalar(255, 255, 255) );

   imshow( window_name, dst );
   int c=waitKey( DELAY_CAPTION );
   //if( c >= 0 ) { return 0; }
   return 0;
  }

  int display_dst( int delay )
  {
    imshow( window_name, dst );
    int c = waitKey ( delay );
    //if( c >= 0 ) { return 0; }
    return 0;
  }